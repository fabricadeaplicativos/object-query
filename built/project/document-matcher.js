//     document-matcher
//     (c) Simon Fan
//     document-matcher is licensed under the MIT terms.

define(["underscore.deep","underscore.contains","underscore"],function(e,t,n){function r(e,t){return n.isRegExp(e)?e.test(t):e===t}function i(e,t){return n.isArray(t)?n.any(t,function(t){return r(e,t)}):r(e,t)}function s(e,t){return t<e}function o(e,t){return t<=e}function u(e,t){return t>e}function a(e,t){return t>=e}function f(e,t){return n.isArray(t)?n.containsAny(e,t):n.contains(e,t)}function l(e,t){return n.isArray(t)?!n.containsAny(e,t):!n.contains(e,t)}function c(e,t){return n.containsAll(t,e)}function h(e,t){}function p(e,t){return!i(e,t)}function d(){}function v(){}function m(){}function g(){}function y(){}function w(e,t){return n.isObject(e)&&!n.isRegExp(e)?n.every(e,function(e,n){return b[n](e,t)}):b.$match(e,t)}function E(e,t){return n.every(e,function(e,r){var i=n.deep(t,r);return w(e,i)})}function S(e){return e=e||{},n.partial(E,e)}var b={$matchSingle:r,$match:i,$lt:s,$lte:o,$gt:u,$gte:a,$in:f,$nin:l,$all:c,$e:h,$ne:p,$or:v,$and:m,$exists:g,$where:y};return S.evaluateValue=w,S.evaluateDocument=E,S});