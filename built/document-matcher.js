//     document-matcher
//     (c) Simon Fan
//     document-matcher is licensed under the MIT terms.

define("document-matcher",["underscore.deep","underscore.contains","underscore"],function(n,t,e){function r(n,t){return e.isRegExp(n)?n.test(t):n===t}function u(n,t){return e.isArray(t)?e.any(t,function(t){return r(n,t)}):r(n,t)}function c(n,t){return n>t}function i(n,t){return n>=t}function o(n,t){return t>n}function a(n,t){return t>=n}function f(n,t){return e.isArray(t)?e.containsAny(n,t):e.contains(n,t)}function s(n,t){return e.isArray(t)?!e.containsAny(n,t):!e.contains(n,t)}function $(n,t){return e.containsAll(t,n)}function l(){}function d(n,t){return!u(n,t)}function y(){}function g(){}function m(){}function v(){}function A(n,t){return console.log(n),console.log(t),e.isObject(n)&&!e.isRegExp(n)?e.every(n,function(n,e){return x[e](n,t)}):x.$match(n,t)}function h(n,t){return e.every(n,function(n,r){var u=e.deep(t,r);return A(n,u)})}function p(n){return e.partial(h,n)}var x={$matchSingle:r,$match:u,$lt:c,$lte:i,$gt:o,$gte:a,$in:f,$nin:s,$all:$,$e:l,$ne:d,$or:y,$and:g,$exists:m,$where:v};return p.evaluateValue=A,p.evaluateDocument=h,p});